
#include <SDL2/SDL.h>
#include <iostream>
#include "window.h"

//-----------------------------MAP----------------------------------------------
#define mapX  8      //map width
#define mapY  8      //map height
#define mapS 48      //map cube size

float sin_table[360]=
{
    0.0,
    0.01745241,
    0.0348995,
    0.05233596,
    0.06975647,
    0.08715574,
    0.10452846,
    0.12186934,
    0.1391731,
    0.15643447,
    0.17364818,
    0.190809,
    0.20791169,
    0.22495105,
    0.2419219,
    0.25881905,
    0.27563736,
    0.2923717,
    0.30901699,
    0.32556815,
    0.34202014,
    0.35836795,
    0.37460659,
    0.39073113,
    0.40673664,
    0.42261826,
    0.43837115,
    0.4539905,
    0.46947156,
    0.48480962,
    0.5,
    0.51503807,
    0.52991926,
    0.54463904,
    0.5591929,
    0.57357644,
    0.58778525,
    0.60181502,
    0.61566148,
    0.62932039,
    0.64278761,
    0.65605903,
    0.66913061,
    0.68199836,
    0.69465837,
    0.70710678,
    0.7193398,
    0.7313537,
    0.74314483,
    0.75470958,
    0.76604444,
    0.77714596,
    0.78801075,
    0.79863551,
    0.80901699,
    0.81915204,
    0.82903757,
    0.83867057,
    0.8480481,
    0.8571673,
    0.8660254,
    0.87461971,
    0.88294759,
    0.89100652,
    0.89879405,
    0.90630779,
    0.91354546,
    0.92050485,
    0.92718385,
    0.93358043,
    0.93969262,
    0.94551858,
    0.95105652,
    0.95630476,
    0.9612617,
    0.96592583,
    0.97029573,
    0.97437006,
    0.9781476,
    0.98162718,
    0.98480775,
    0.98768834,
    0.99026807,
    0.99254615,
    0.9945219,
    0.9961947,
    0.99756405,
    0.99862953,
    0.99939083,
    0.9998477,
    1.0,
    0.9998477,
    0.99939083,
    0.99862953,
    0.99756405,
    0.9961947,
    0.9945219,
    0.99254615,
    0.99026807,
    0.98768834,
    0.98480775,
    0.98162718,
    0.9781476,
    0.97437006,
    0.97029573,
    0.96592583,
    0.9612617,
    0.95630476,
    0.95105652,
    0.94551858,
    0.93969262,
    0.93358043,
    0.92718385,
    0.92050485,
    0.91354546,
    0.90630779,
    0.89879405,
    0.89100652,
    0.88294759,
    0.87461971,
    0.8660254,
    0.8571673,
    0.8480481,
    0.83867057,
    0.82903757,
    0.81915204,
    0.80901699,
    0.79863551,
    0.78801075,
    0.77714596,
    0.76604444,
    0.75470958,
    0.74314483,
    0.7313537,
    0.7193398,
    0.70710678,
    0.69465837,
    0.68199836,
    0.66913061,
    0.65605903,
    0.64278761,
    0.62932039,
    0.61566148,
    0.60181502,
    0.58778525,
    0.57357644,
    0.5591929,
    0.54463904,
    0.52991926,
    0.51503807,
    0.5,
    0.48480962,
    0.46947156,
    0.4539905,
    0.43837115,
    0.42261826,
    0.40673664,
    0.39073113,
    0.37460659,
    0.35836795,
    0.34202014,
    0.32556815,
    0.30901699,
    0.2923717,
    0.27563736,
    0.25881905,
    0.2419219,
    0.22495105,
    0.20791169,
    0.190809,
    0.17364818,
    0.15643447,
    0.1391731,
    0.12186934,
    0.10452846,
    0.08715574,
    0.06975647,
    0.05233596,
    0.0348995,
    0.01745241,
    0.0,
    -0.01745241,
    -0.0348995,
    -0.05233596,
    -0.06975647,
    -0.08715574,
    -0.10452846,
    -0.12186934,
    -0.1391731,
    -0.15643447,
    -0.17364818,
    -0.190809,
    -0.20791169,
    -0.22495105,
    -0.2419219,
    -0.25881905,
    -0.27563736,
    -0.2923717,
    -0.30901699,
    -0.32556815,
    -0.34202014,
    -0.35836795,
    -0.37460659,
    -0.39073113,
    -0.40673664,
    -0.42261826,
    -0.43837115,
    -0.4539905,
    -0.46947156,
    -0.48480962,
    -0.5,
    -0.51503807,
    -0.52991926,
    -0.54463904,
    -0.5591929,
    -0.57357644,
    -0.58778525,
    -0.60181502,
    -0.61566148,
    -0.62932039,
    -0.64278761,
    -0.65605903,
    -0.66913061,
    -0.68199836,
    -0.69465837,
    -0.70710678,
    -0.7193398,
    -0.7313537,
    -0.74314483,
    -0.75470958,
    -0.76604444,
    -0.77714596,
    -0.78801075,
    -0.79863551,
    -0.80901699,
    -0.81915204,
    -0.82903757,
    -0.83867057,
    -0.8480481,
    -0.8571673,
    -0.8660254,
    -0.87461971,
    -0.88294759,
    -0.89100652,
    -0.89879405,
    -0.90630779,
    -0.91354546,
    -0.92050485,
    -0.92718385,
    -0.93358043,
    -0.93969262,
    -0.94551858,
    -0.95105652,
    -0.95630476,
    -0.9612617,
    -0.96592583,
    -0.97029573,
    -0.97437006,
    -0.9781476,
    -0.98162718,
    -0.98480775,
    -0.98768834,
    -0.99026807,
    -0.99254615,
    -0.9945219,
    -0.9961947,
    -0.99756405,
    -0.99862953,
    -0.99939083,
    -0.9998477,
    -1.0,
    -0.9998477,
    -0.99939083,
    -0.99862953,
    -0.99756405,
    -0.9961947,
    -0.9945219,
    -0.99254615,
    -0.99026807,
    -0.98768834,
    -0.98480775,
    -0.98162718,
    -0.9781476,
    -0.97437006,
    -0.97029573,
    -0.96592583,
    -0.9612617,
    -0.95630476,
    -0.95105652,
    -0.94551858,
    -0.93969262,
    -0.93358043,
    -0.92718385,
    -0.92050485,
    -0.91354546,
    -0.90630779,
    -0.89879405,
    -0.89100652,
    -0.88294759,
    -0.87461971,
    -0.8660254,
    -0.8571673,
    -0.8480481,
    -0.83867057,
    -0.82903757,
    -0.81915204,
    -0.80901699,
    -0.79863551,
    -0.78801075,
    -0.77714596,
    -0.76604444,
    -0.75470958,
    -0.74314483,
    -0.7313537,
    -0.7193398,
    -0.70710678,
    -0.69465837,
    -0.68199836,
    -0.66913061,
    -0.65605903,
    -0.64278761,
    -0.62932039,
    -0.61566148,
    -0.60181502,
    -0.58778525,
    -0.57357644,
    -0.5591929,
    -0.54463904,
    -0.52991926,
    -0.51503807,
    -0.5,
    -0.48480962,
    -0.46947156,
    -0.4539905,
    -0.43837115,
    -0.42261826,
    -0.40673664,
    -0.39073113,
    -0.37460659,
    -0.35836795,
    -0.34202014,
    -0.32556815,
    -0.30901699,
    -0.2923717,
    -0.27563736,
    -0.25881905,
    -0.2419219,
    -0.22495105,
    -0.20791169,
    -0.190809,
    -0.17364818,
    -0.15643447,
    -0.1391731,
    -0.12186934,
    -0.10452846,
    -0.08715574,
    -0.06975647,
    -0.05233596,
    -0.0348995,
    -0.01745241,
};

float sin(int deg){
    deg %= 360;
    return sin_table[deg];
}
float cos(int deg){
    return sin(deg+90);
}
int myRound(float a){
    int result = 0;
    while(a >= 1) {
        result++;
        a--;
    }
    while(a <= -1){
        result--;
        a++;
    }
    if(a <= -0.5) result--;
    if(a >= 0.5) result++;
    return result;
}

int map[]=           //the map array. Edit to change level but keep the outer walls
{
    1,1,1,1,1,1,1,1,
    1,0,1,1,1,0,0,1,
    1,0,1,1,1,1,0,1,
    1,0,1,0,0,0,0,1,
    1,0,0,0,0,0,0,1,
    1,0,0,0,0,1,0,1,
    1,0,0,0,0,0,0,1,
    1,1,1,1,1,1,1,1,
};

#define WW 640
#define WH 480

Window* win;
Window* mapWin;
bool quit;

void init(){
    SDL_Init(SDL_INIT_VIDEO);
    win = create("Window",WW,WH);
    mapWin = create("Map",WW,WH);
}

void cleanup(){
    cleanup(win);
    cleanup(mapWin);
    SDL_Quit();
}

void render(){
    render(win);
    render(mapWin);
}

void handleEvents(){
    SDL_Event e;
    while (SDL_PollEvent(&e)){
        if (e.type == SDL_QUIT){
            quit = true;
        }
        if (e.type == SDL_KEYDOWN){
            if(e.key.keysym.sym == SDLK_ESCAPE){
                quit = true;
            }
        }
    }
}
void drawMap(Window* win, int x, int y, int size, int mw, int mh, int fCl, int bCl, int* map){
    for(int i = 0; i < mw; i++) for(int j = 0; j < mh; j++){
        drawRect(win, x+i*size, y+j*size, size, size, map[j*mw+i] != 0 ? fCl : bCl);
    }
}

void display(){
    int a=50;
    int d= 0 ;
    while(true){
		handleEvents();
		if (quit) break;
        drawMap(mapWin,0,0,mapS,mapX,mapY,0xFFFFFF,0,map);
        render();
    }
}

int main(){
    init();
    display();
    cleanup();
}

